"use strict";(self.webpackChunkopenfrontend_framework=self.webpackChunkopenfrontend_framework||[]).push([[432],{756:function(t,e,n){n.r(e),n.d(e,{initMultiple:function(){return a}});var i=n(1184);const u={},s={};class r extends i.Z{constructor(t,e){super(t,e),this._input=this._element.querySelector('input[type="number"]'),this._input.addEventListener("change",(()=>this._onChange())),this._minusButton=this._element.querySelector("[data-of-quantity-picker-minus]"),this._plusButton=this._element.querySelector("[data-of-quantity-picker-plus]"),this._initButton(this._minusButton,-1),this._initButton(this._plusButton,1),this._element.dispatchEvent(new CustomEvent("initialized.of.quantity_picker"))}static get Default(){return s}static get DefaultType(){return u}static get NAME(){return"quantity_picker"}getMin(){return this._parseNumber(this._input.min,null)}getMax(){return this._parseNumber(this._input.max,null)}getStep(){return this._parseNumber(this._input.step,1)}getValue(){return this._parseNumber(this._input.value,0)}_initButton(t,e){t.addEventListener("click",(t=>{t.preventDefault(),this._input.value=this._getNextValue(e),this._input.dispatchEvent(new Event("change")),this._onChange()})),this._onChange()}_updateButton(t,e,n){if(null===e)return;const i=this.getValue()+this.getStep()*n;t.disabled=n>0?i>e:i<e}_onChange(){this._updateButton(this._minusButton,this.getMin(),-1),this._updateButton(this._plusButton,this.getMax(),1),this._element.dispatchEvent(new CustomEvent("changed.of.quantity_picker"))}_getNextValue(t){const e=this.getMin(),n=this.getMax();let i=this.getValue()+this.getStep()*t;return null!==e&&i<e&&(i=e),null!==n&&i>n&&(i=n),i}_parseNumber(t,e){return t=Number.parseInt(t,10),Number.isNaN(t)?e:t}}function a(t){for(const e of t)r.getOrCreateInstance(e,e.dataset.ofQuantityPicker?JSON.parse(e.dataset.ofQuantityPicker):{})}e.default=r}}]);