diff --git a/node_modules/glightbox/src/js/core/touch-navigation.js b/node_modules/glightbox/src/js/core/touch-navigation.js
index 1964cb1..e01437b 100644
--- a/node_modules/glightbox/src/js/core/touch-navigation.js
+++ b/node_modules/glightbox/src/js/core/touch-navigation.js
@@ -227,7 +227,7 @@ export default function touchNavigation(instance) {
                 lastZoomedPosX = null;
                 zoomedPosX = null;
                 zoomedPosY = null;
-                mediaImage.setAttribute('style', '');
+                mediaImage.style = '';
                 return;
             }
             if (scale > maxScale) {
diff --git a/node_modules/glightbox/src/js/core/zoom.js b/node_modules/glightbox/src/js/core/zoom.js
index a9bdbba..4d86782 100644
--- a/node_modules/glightbox/src/js/core/zoom.js
+++ b/node_modules/glightbox/src/js/core/zoom.js
@@ -27,6 +27,8 @@ export default class ZoomImages {
         this.xOffset = 0;
         this.yOffset = 0;
 
+        this.imgStylesMapper = new Map();
+
         this.img.addEventListener('mousedown', (e) => this.dragStart(e), false);
         this.img.addEventListener('mouseup', (e) => this.dragEnd(e), false);
         this.img.addEventListener('mousemove', (e) => this.drag(e), false);
@@ -59,7 +61,7 @@ export default class ZoomImages {
         }
 
         const img = this.img;
-        img.setAttribute('data-style', img.getAttribute('style'));
+        this.imgStylesMapper.set(img, img.style);
         img.style.maxWidth = img.naturalWidth + 'px';
         img.style.maxHeight = img.naturalHeight + 'px';
 
@@ -71,8 +73,8 @@ export default class ZoomImages {
         this.zoomedIn = true;
     }
     zoomOut() {
-        this.img.parentNode.setAttribute('style', '');
-        this.img.setAttribute('style', this.img.getAttribute('data-style'));
+        this.img.parentNode.style = '';
+        this.img.style = this.imgStylesMapper.get(img) || '';
         this.slide.classList.remove('zoomed');
         this.zoomedIn = false;
         this.currentX = null;
diff --git a/node_modules/glightbox/src/js/glightbox.js b/node_modules/glightbox/src/js/glightbox.js
index 4e6ab78..c0c27d1 100644
--- a/node_modules/glightbox/src/js/glightbox.js
+++ b/node_modules/glightbox/src/js/glightbox.js
@@ -1085,8 +1085,8 @@ class GlightboxInit {
                 let descHeight = description.offsetHeight;
                 let imgNode = image.querySelector('img');
 
-                imgNode.setAttribute('style', `max-height: calc(100vh - ${descHeight}px)`);
-                description.setAttribute('style', `max-width: ${imgNode.offsetWidth}px;`);
+                imgNode.style.maxHeight = `calc(100vh - ${descHeight}px)`;
+                description.style.maxWidth = `${imgNode.offsetWidth}px`;
             }
         }
 
@@ -1134,15 +1134,15 @@ class GlightboxInit {
                 let vheight = video.offsetHeight;
                 let ratio = winHeight / vheight;
                 let vsize = { width: vwidth * ratio, height: vheight * ratio };
-                video.parentNode.setAttribute('style', `max-width: ${vsize.width}px`);
+                video.parentNode.style.maxWidth = `${vsize.width}px`;
 
                 if (descriptionResize) {
-                    description.setAttribute('style', `max-width: ${vsize.width}px;`);
+                    description.style.maxWidth = `${vsize.width}px`;
                 }
             } else {
                 video.parentNode.style.maxWidth = `${videoWidth}`;
                 if (descriptionResize) {
-                    description.setAttribute('style', `max-width: ${videoWidth};`);
+                    description.style.maxWidth = videoWidth;
                 }
             }
         }
