"use strict";(self.webpackChunkopenfrontend_framework=self.webpackChunkopenfrontend_framework||[]).push([[409],{4467:function(t,e,n){n.r(e),n.d(e,{initMultiple:function(){return u}});var o=n(3066),a=n(4147);function s(t){const e=[];for(const n of Object.values(t)){const t=this.getValue(n);t&&e.push(this.getSummary(n,t))}return e.join(", ")}const i={format:"function|undefined",target:"element|string|undefined"},r={format:void 0,target:void 0};class c extends o.Z{constructor(t,e){super(t,e),this._config.format=this._config.format||s.bind(this),this._fields=[...this._element.querySelectorAll("input, select")].filter((t=>Boolean(t.name))),this._target=(0,a.sb)(this._config.target),this._initFields(),this._onChange(),this._element.dispatchEvent(new CustomEvent("initialized.of.combo_box"))}static get Default(){return r}static get DefaultType(){return i}static get NAME(){return"combo_box"}getData(){const t={};for(const e of this._fields)t[e.name]=e;return t}getSummary(t,e){return"checkbox"===t.type?t.labels[0].textContent:("select"===t.tagName.toLowerCase()&&(e=t.querySelector('option[value="'.concat(e,'"]')).textContent),"".concat(t.labels[0].textContent||t.name,": ").concat(e))}getValue(t){let{value:e}=t;return"number"===t.type?e=Number.parseInt(e,10):"checkbox"===t.type&&(e=t.checked),e}_initFields(){for(const t of this._fields)t.addEventListener("change",(()=>this._onChange())),"input"!==t.tagName.toLowerCase()&&"textarea"!==t.tagName.toLowerCase()||t.addEventListener("keyup",(()=>this._onChange()))}_onChange(){if(this._target){const t=this._config.format(this.getData());"input"===this._target.tagName.toLowerCase()||"textarea"===this._target.tagName.toLowerCase()?this._target.value=t:this._target.textContent=t}this._element.dispatchEvent(new CustomEvent("changed.of.combo_box"))}}function u(t){for(const e of t)c.getOrCreateInstance(e,e.dataset.ofComboBox?JSON.parse(e.dataset.ofComboBox):{})}e.default=c}}]);